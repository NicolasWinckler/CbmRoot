#$ -wd /tmp 
#$ -j y
# Number of subtasks to start
#$ -t 1-250

#XXXXX=$(printf "%05d" "1")
#XXXX=$(printf "%04d" "1")
XXXXX=$(printf "%05d" "$SGE_TASK_ID")
XXXX=$(printf "%04d" "$SGE_TASK_ID")

# specify input and output directories
outdir=/hera/cbm/users/slebedev/mc/dielectron/apr14/${coll_energy}/${trd}/${tof}/${field_scale}field/${mvd}/${pluto_particle}/
cbmroot_config_path=/hera/cbm/users/slebedev/trunk/build/config.sh
macro_dir=/hera/cbm/users/slebedev/trunk/cbmroot/macro/analysis/dielectron/


# Needed to run macro via script
export SCRIPT=yes

# Number of events to run
nevents=1000

#create needed directories
mkdir -p ${outdir}/log

#create directory for output results
mkdir -p ${outdir}/results/${XXXXX}/

# setup the run environment
source ${cbmroot_config_path}
 
# This line is needed, otherwise root will crash
export DISPLAY=localhost:0.0

export PION_MISIDENTIFICATION_LEVEL=-1.0

export URQMD_FILE=/hera/cbm/prod/gen/urqmd/auau/${coll_energy}/centr/urqmd.auau.${coll_energy}.centr.${XXXXX}.root
export MC_FILE=${outdir}/mc.auau.${coll_energy}.centr.${XXXXX}.root
export PAR_FILE=${outdir}/params.auau.${coll_energy}.centr.${XXXXX}.root
export RECO_FILE=${outdir}/reco.auau.${coll_energy}.centr.${XXXXX}.root
export LITQA_FILE=${outdir}/litqa.auau.${coll_energy}.centr.${XXXXX}.root
export ANALYSIS_FILE=${outdir}/analysis.auau.${coll_energy}.centr.${XXXXX}.root
#export ANALYSIS_FILE=${outdir}/analysis.auau.pisupp${PION_MISIDENTIFICATION_LEVEL}.${coll_energy}.centr.${XXXXX}.root 
export RESULT_DIR=

#Simulation parameters
#--------------------------------------------------
# number of embedded electrons
export NOF_ELECTRONS=0
# number of embedded positrons
export NOF_POSITRONS=0
# If "yes" than UrQMD will be used as background
export URQMD=yes
# If "yes" PLUTO particles will be embedded
export PLUTO=yes
#Collision energy: 25gev or 8gev -> set proper weight into analysis
export ENERGY=${coll_energy}

#Geometries
export CAVE_GEOM=cave.geo
export PIPE_GEOM=pipe/pipe_standard.geo
if [ ${mvd} = "mvd4" ] ; then
   export MVD_GEOM=mvd/mvd_Nov_2012.geo
elif [ ${mvd} = "nomvd" ]; then
   export MVD_GEOM=
elif [ ${mvd} = "mvd" ]; then
   export MVD_GEOM=mvd/mvd_v08a.geo
fi
export STS_GEOM=sts/sts_v13c.geo.root
export STS_DIGI=${VMCWORKDIR}/parameters/sts/sts_v13c_std.digi.par
export STS_MATERIAL_BUDGET_FILE=${VMCWORKDIR}/parameters/sts/sts_matbudget_v13c.root
export RICH_GEOM=rich/rich_v08a.geo

#Set TRD geometry
# digi or smearing or clustering
TRD_HIT_PRODUCER_TYPE=clustering
if [ ${trd} = "trd10" ] ; then
    export TRD_GEOM=trd/trd_v13p_3e.geo.root
    export TRD_DIGI=${VMCWORKDIR}/parameters/trd/trd_v13p_3e.digi.par
    export TRD_ANN_CUT=0.85
    export MIN_NOF_POINTS_TRD=6
elif [ ${trd} = "notrd" ] ; then
    export TRD_GEOM=
    export TRD_DIGI=
    export TRD_ANN_CUT=0.0
    export MIN_NOF_POINTS_TRD=0
elif [ ${trd} = "trd4" ] ; then
    export TRD_GEOM=trd/trd_v13p_1e.geo.root
    export TRD_DIGI=${VMCWORKDIR}/parameters/trd/trd_v13p_1e.digi.par
    export TRD_ANN_CUT=-0.1
    export MIN_NOF_POINTS_TRD=2
fi


if [ ${tof} = "tofv13" ] ; then
   export TOF_GEOM=tof/tof_v13b.geo.root
   export TOF_DIGI=${VMCWORKDIR}/parameters/tof/tof_v13b.digi.par
   export TOF_HIT_PRODUCER_TYPE=v13
elif [ ${tof} = "tofv07" ] ; then
   export TOF_GEOM=tof/tof_v07a.geo
   export TOF_DIGI=
   export TOF_HIT_PRODUCER_TYPE=v07
fi


export FIELD_MAP=field_v12a
export MAGNET_GEOM=magnet/magnet_v12a.geo
export FIELD_MAP_SCALE=${field_scale}

#If "yes" DELTA electrons will be embedded
export DELTA=no
export DELTA_FILE=/lustre/cbm/user/ebelolap/aug11/sep12/${ENERGY}/${FIELDDIR}/deltasource/mc.delta.root

export PLUTO_PARTICLE=${pluto_particle}
export PLUTO=yes

if [ ${pluto_particle} = "rho0" ] ; then 
   export PLUTO_FILE=/hera/cbm/users/ekrebs/pluto/cktA/${ENERGY}/rho0/epem/pluto.auau.${ENERGY}.rho0.epem.${XXXX}.root
  #  export PLUTO_FILE=/hera/cbm/users/slebedev/mc/pluto/auau/${ENERGY}/rho0/epem/pluto.auau.${ENERGY}.rho0.epem.${XXXX}.root
elif [ ${pluto_particle} = "omegaepem" ] ; then 
   export PLUTO_FILE=/hera/cbm/users/ekrebs/pluto/cktA/${ENERGY}/omega/epem/pluto.auau.${ENERGY}.omega.epem.${XXXX}.root
 #   export PLUTO_FILE=/hera/cbm/users/slebedev/mc/pluto/auau/${ENERGY}/omega/epem/pluto.auau.${ENERGY}.omega.epem.${XXXX}.root
elif [ ${pluto_particle} = "omegadalitz" ] ; then 
   export PLUTO_FILE=/hera/cbm/users/ekrebs/pluto/cktA/${ENERGY}/omega/pi0epem/pluto.auau.${ENERGY}.omega.pi0epem.${XXXX}.root
 #   export PLUTO_FILE=/hera/cbm/users/slebedev/mc/pluto/auau/${ENERGY}/omega/pi0epem/pluto.auau.${ENERGY}.omega.pi0epem.${XXXX}.root
elif [ ${pluto_particle} = "phi" ] ; then 
   export PLUTO_FILE=/hera/cbm/users/ekrebs/pluto/cktA/${ENERGY}/phi/epem/pluto.auau.${ENERGY}.phi.epem.${XXXX}.root
 #   export PLUTO_FILE=/hera/cbm/users/slebedev/mc/pluto/auau/${ENERGY}/phi/epem/pluto.auau.${ENERGY}.phi.epem.${XXXX}.root
elif [ ${pluto_particle} = "pi0" ] ; then 
   export PLUTO_FILE=/hera/cbm/users/ekrebs/pluto/cktA/${ENERGY}/pi0/gepem/pluto.auau.${ENERGY}.pi0.gepem.${XXXX}.root
 #   export PLUTO_FILE=/hera/hades/user/ekrebs/cbm/pluto/auau/${ENERGY}/pi0/gepem/pluto.auau.${ENERGY}.pi0.gepem.${XXXX}.root
elif [ ${pluto_particle} = "urqmd" ] ; then 
   export PLUTO=no
fi 

# create special and enter special workdir for job
username=$(whoami)
workdir=/tmp/$username/$JOB_ID.$SGE_TASK_ID
mkdir -p $workdir
cd $workdir

# run the root simulation
#root -b -l -q "${macro_dir}/run_sim.C(${nevents})"
#root -b -l -q "${macro_dir}/run_reco.C(${nevents})"
#root -b -l -q "${macro_dir}/run_litqa.C(${nevents})"
root -b -l -q "${macro_dir}/run_analysis.C(${nevents})"

cp -v ${SGE_STDOUT_PATH} ${outdir}/log/${JOB_ID}.${SGE_TASK_ID}.log

export SCRIPT=no
