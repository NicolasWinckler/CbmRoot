/* *******************************************************************
// (C)opyright 2004
// 
// Institute of Computer Science V
// Prof. Männer
// University of Mannheim, Germany
// 
// *******************************************************************
// 
// Designer(s):   Steinle
// 
// *******************************************************************
// 
// Project:     Trackfinder for CBM-Project at GSI-Darmstadt, Germany
// 
// *******************************************************************
// 
// Description:
//
//   class:
//     - derived from errorHandling
//     - base class for errors occuring during file access
//
// *******************************************************************
//
// $Author: csteinle $
// $Date: 2008-08-14 12:34:44 $
// $Revision: 1.3 $
//
// *******************************************************************/


#include "../include/fileioError.h"


/****************************************************************
 * CLASS fileioError							 				*
 ****************************************************************/

/****************************************************************
 * Default constructor											*
 ****************************************************************/

fileioError::fileioError() : errorHandling(FILEIOLIB) {

}

/****************************************************************
 * Destructor													*
 ****************************************************************/

fileioError::~fileioError() {

}


/****************************************************************
 * CLASS tooLessCmdsError						 				*
 ****************************************************************/

/****************************************************************
 * Default constructor											*
 ****************************************************************/

tooLessCmdsError::tooLessCmdsError() : fileioError() {

}

/****************************************************************
 * Destructor													*
 ****************************************************************/

tooLessCmdsError::~tooLessCmdsError() {

}

/****************************************************************
 * This method displays an error message.		 				*
 ****************************************************************/

void tooLessCmdsError::errorMsg() {

	printMsg("The file does not specify every command!!!");

}


/****************************************************************
 * CLASS tooLessDataInFileError					 				*
 ****************************************************************/

/****************************************************************
 * Default constructor											*
 ****************************************************************/

tooLessDataInFileError::tooLessDataInFileError() : fileioError() {

}

/****************************************************************
 * Destructor													*
 ****************************************************************/

tooLessDataInFileError::~tooLessDataInFileError() {

}

/****************************************************************
 * This method displays an error message.		 				*
 ****************************************************************/

void tooLessDataInFileError::errorMsg() {

	printMsg("The data in the file is not as much as specified!!!");

}


/****************************************************************
 * CLASS dataPtrError									 		*
 ****************************************************************/

/****************************************************************
 * Default constructor											*
 ****************************************************************/

dataPtrError::dataPtrError() : fileioError() {

}

/****************************************************************
 * Destructor													*
 ****************************************************************/

dataPtrError::~dataPtrError() {

}

/****************************************************************
 * This method displays an error message.		 				*
 ****************************************************************/

void dataPtrError::errorMsg() {

	printMsg("The pointer to the data structure for accessing the file is undefined!!!");

}


/****************************************************************
 * CLASS dataStringNullError							 		*
 ****************************************************************/

/****************************************************************
 * Default constructor											*
 ****************************************************************/

dataStringNullError::dataStringNullError() : fileioError() {

}

/****************************************************************
 * Destructor													*
 ****************************************************************/

dataStringNullError::~dataStringNullError() {

}

/****************************************************************
 * This method displays an error message.		 				*
 ****************************************************************/

void dataStringNullError::errorMsg() {

	printMsg("The pointer to the data string to legalize is null!!!");

}


/****************************************************************
 * CLASS wrongIteratorError								 		*
 ****************************************************************/

/****************************************************************
 * Default constructor											*
 ****************************************************************/

wrongIteratorError::wrongIteratorError() : fileioError() {

}

/****************************************************************
 * Destructor													*
 ****************************************************************/

wrongIteratorError::~wrongIteratorError() {

}

/****************************************************************
 * This method displays an error message.		 				*
 ****************************************************************/

void wrongIteratorError::errorMsg() {

	printMsg("The iterator cannot be used because it is null!!!");

}
