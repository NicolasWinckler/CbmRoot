// --------------------------------------------------------------------------
// -----             Header for the CbmTrdHitProducerDigi              ------
// -----                 Created 04.03.09 by F. Uhlig                  ------
// --------------------------------------------------------------------------


/**
 **   Calculate from digi osition the Hit position
 **   Only for one digi cluster. 
 **
 *@   f.uhlig@gsi.de
 **/

/* Generated by Together */

#ifndef CBMTRDHITPRODUCERDIGI_H
#define CBMTRDHITPRODUCERDIGI_H

#include "CbmTrdDetectorId.h"

#include "FairTask.h"

#include "TVector3.h"

#include <vector>

class TClonesArray;
class CbmTrdDigiPar;
class CbmTrdDigi;
class CbmTrdDigiMatch;
class CbmTrdModule;

    class CbmTrdHitProducerDigi : public FairTask {
public:

    

    /** Default constructor **/
    CbmTrdHitProducerDigi();

    /** Standard constructor **/
    CbmTrdHitProducerDigi(const char *name, const char *title="CBM Task");

    /** Destructor **/
    virtual ~CbmTrdHitProducerDigi();

    /** Initialisation **/
    virtual InitStatus ReInit();
    virtual InitStatus Init();
    virtual void SetParContainers();

    /** Executed task **/
    virtual void Exec(Option_t * option);

    /** Finish task **/
    virtual void Finish();

    void AddHit(TVector3 &posHit, TVector3 &posHitErr,
		Int_t TrackID, Int_t PlaneID, Int_t ref, Double_t ELoss,
		Double_t ELossTR, Double_t ELossdEdX);

    void Register();

private:

    Int_t   fStation;
    Int_t   fLayer;
    Int_t   fModuleType;
    Int_t   fModuleCopy;
    Int_t   fCol; //Calculated pixel column were the hit is in
    Int_t   fRow; //Calculated pixel row were the hit is in
    Int_t   fDetId; //Unique detector id

    Float_t fpadsizex; //pixel widh in x;
    Float_t fpadsizey; //pixel width in y;
    Float_t fsizex; //module widh in x;
    Float_t fsizey; //module width in y;
    Float_t fPosX;//Hit position in chamber coordinates
    Float_t fPosY;//Hit position in chamber coordinates
    Float_t fPosZ;//Hit position in chamber coordinates

    
    TClonesArray *fTrdDigi;      //! TRD digi
    TClonesArray *fTrdDigiMatch; //! TRD digi match
    TClonesArray *fHitCollection;//! TRD hits
    TClonesArray *fMCStack;      //! Tracks

    CbmTrdDigiPar *fDigiPar;   //!
    CbmTrdModule  *fModuleInfo; //!

    CbmTrdDetectorId fTrdId; //!

    std::vector<Int_t> fLayersBeforeStation; //! 

    void CalculateHitPosition();
 
    ClassDef(CbmTrdHitProducerDigi,1) 

};
#endif //CBMTRDHITPRODUCERDIGI_H
